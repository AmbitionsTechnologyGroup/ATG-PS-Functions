Function Debug-UmbrellaDNS {

	#Policy exposer:
	$Lookup = Resolve-DnsName -Name debug.opendns.com -Type txt
	$OrgID = ($Lookup | Where-Object -Property Strings -Match "orgid").Strings -replace "[^0-9]" , ''
	$Bundle = ($Lookup | Where-Object -Property Strings -Match "bundle").Strings -replace "[^0-9]" , ''
	$PolicyURL = 'https://dashboard.umbrella.com/o/' + $OrgID + '/#/configuration/policy/' + $Bundle
	Write-Output "Organization ID: $OrgID"
	Write-Output "Policy ID: $Bundle"
	Write-Output "Umbrella DNS Policy applied to this computer:`n`n$PolicyURL"
	
	#Diagnostic executable:
	$X64exe = ${Env:ProgramFiles(x86)} + "\OpenDNS\Umbrella Roaming Client\UmbrellaDiagnostic.exe"
	$X86exe = $ENV:ProgramFiles + "\OpenDNS\Umbrella Roaming Client\UmbrellaDiagnostic.exe"
	If (Test-Path $X64exe -ea SilentlyContinue) {
		$UDexe = $X64exe
	} ElseIf (Test-Path $X86exe -ea SilentlyContinue) {
		$UDexe = $X86exe
	} Else {
		Write-Host "Umbrella Diagnostics do not appear to be installed."
		Break
	}
	Write-Host "Here is the help file for UmbrellaDiagnostic.exe:"
Write-Host @"

  -d, --domain=VALUE         A specific URL to target with tests (e.g.
							   opendns.com)
  -s, --silent               Automatically run tests in silent mode (will not
							   show the UI or new windows; defaults to -i
							   output)
  -i, --internet             Output all results to diagnostic.opendns.com;
							   destination URL will print to console as
							   'url=URL'
  -o, --output=VALUE         Output to a file, which will print to console as
							   'outputFile=FILE'; can be a full path, make sure
							   to use "quotes" if needed
  -c, --console              Output all results to console as text
	  --erc                  Force the Roaming Client tests to be performed
	  --noerc                Skip the Roaming Client tests even if it's
							   installed
  -h, -?, --help             Display this usage statement

If run without -o or -c arguments, -i is the default output; if run with -o or -c, then -i must be explicitly set if desired as additional output.

"@
	Write-Host "Recommend running with arguments '--silent --internet --console'.`nAdd --domain=<domain> to test internal or external targets.`n"
	$Args = Read-Host "What arguments would you like to add? Just press enter if you wish to launch the window.`n"
	If ($Args) {
		Start-Process $UDexe -ArgumentList $Args
	} Else {
		Start-Process $UDexe
	}
}

Function Debug-ServerRebootScript {
# All scripts and funtions are now run from ps.ambitionsgroup.com (github)
	Write-Host -NoNewLine "`n - Retrieving Ambitions Server Reboot Script -"
	$greenCheck = @{
		Object = [Char]8730
		ForegroundColor = 'Green'
		NoNewLine = $true
		}
	$progressPreference = 'silentlyContinue'
	[System.Net.ServicePointManager]::SecurityProtocol = 3072 -bor 768 -bor 192
	Set-ExecutionPolicy Bypass -Scope Process -Force
	(Invoke-WebRequest "https://raw.githubusercontent.com/AmbitionsTechnologyGroup/ATG-PS-Functions/master/Scripts/Server-Reboots/ServerReboots_WhatIf.txt" -UseBasicParsing).Content | Invoke-Expression
}